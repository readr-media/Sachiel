# sync cronjob query [gql_mesh_latest_stories](https://github.com/readr-media/mesh-feed-parser/blob/dev/app/gql.py#L145-L187) to create gql types
query LatestStories($date: DateTime) {
  stories(
    where: { published_date: { gte: $date }, category: { id: { gt: 0 } } }
    orderBy: { published_date: desc }
  ) {
    id
    url
    title
    category {
      id
      slug
    }
    source {
      id
      title
      customId
    }
    published_date
    summary
    content
    og_title
    og_image
    og_description
    full_content
    origid
    picksCount: pickCount(
      where: { kind: { equals: "read" }, is_active: { equals: true } }
    )
    picks: pick(
      where: { kind: { equals: "read" }, is_active: { equals: true } }
    ) {
      createdAt
      member {
        id
        name
        avatar
      }
    }
    commentCount
    paywall
    full_screen_ad
  }
}

query GetStory($storyId: ID, $picksTake: Int, $commentsTake: Int) {
  story(where: { id: $storyId }) {
    id
    title
    summary
    source {
      id
      title
      customId
    }
    url
    og_image
    published_date
    picksCount: pickCount(
      where: { kind: { equals: "read" }, is_active: { equals: true } }
    )
    picks: pick(
      where: { kind: { equals: "read" }, is_active: { equals: true } }
      take: $picksTake
    ) {
      id
      createdAt
      kind
      member {
        id
        customId
        name
        avatar
      }
    }
    commentsCount: commentCount(where: { state: { equals: "public" } })
    comments: comment(
      where: { state: { equals: "public" } }
      orderBy: { createdAt: desc }
      take: $commentsTake
    ) {
      id
      createdAt
      member {
        id
        customId
        name
        avatar
      }
      content
      state
    }
    content
    apiData
  }
}
