query GetMemberFollowing($memberId: ID!, $takes: Int!) {
  member(where: { id: $memberId }) {
    id
    name
    avatar
    following {
      id
      customId
      name
      avatar
      following(where: { id: { gte: 0 } }, orderBy: { id: asc }, take: 10000) {
        id
        customId
        name
        avatar
        followerCount
      }
      pick(
        where: {
          kind: { equals: "read" }
          AND: [{ is_active: { equals: true } }]
        }
        orderBy: { createdAt: desc }
        take: $takes
      ) {
        id
        createdAt
        story {
          ...UserActionStory
        }
      }
      comment(orderBy: { createdAt: desc }, take: $takes) {
        id
        createdAt
        story {
          ...UserActionStory
        }
      }
    }
    pick(
      where: {
        kind: { equals: "read" }
        AND: [{ is_active: { equals: true } }]
      }
    ) {
      id
      story {
        id
      }
    }
  }
}

query GetMemberByFollowingCategory($slugs: [String!]!) {
  members(
    where: { following_category: { every: { slug: { in: $slugs } } } }
    orderBy: [{ id: desc }]
    take: 20
    skip: 0
  ) {
    id
    customId
    name
    nickname
    avatar
  }
}

query GetCurrentUserMemberId($uid: String!) {
  member(where: { firebaseId: $uid }) {
    id
    name
    customId
    email
    avatar
    avatar_image {
      id
    }
    intro
    wallet
    followingMembers: following {
      id
    }
    picks: pick(
      where: {
        AND: [{ kind: { equals: "read" } }, { is_active: { equals: true } }]
      }
    ) {
      story {
        id
      }
    }
    bookmarks: pick(
      where: {
        AND: [{ kind: { equals: "bookmark" } }, { is_active: { equals: true } }]
      }
    ) {
      story {
        id
      }
    }
    followingCategories: following_category(orderBy: { id: asc }) {
      id
      title
      slug
    }
    followingPublishers: follow_publisher {
      id
      title
    }
  }
}

query GetMemberProfile($customId: String, $takes: Int!) {
  member(where: { customId: $customId }) {
    id
    name
    avatar
    customId
    avatar_image {
      urlOriginal
    }
    intro
    picksCount: pickCount(
      where: { kind: { equals: "read" }, is_active: { equals: true } }
    )
    followingCount
    followerCount

    picks: pick(
      where: { kind: { equals: "read" }, is_active: { equals: true } }
      orderBy: { createdAt: desc }
      take: $takes
    ) {
      story {
        id
        og_image
        source {
          title
          official_site
        }
        title
        og_title
        createdAt
        tag {
          id
          name
        }
        pick {
          createdAt
          member {
            id
            name
            avatar
          }
        }
        pickCount
        commentCount
        paywall
        full_screen_ad
        published_date
        comment(
          orderBy: { createdAt: desc }
          where: { member: { customId: { equals: $customId } } }
          take: 1
        ) {
          id
          content
          createdAt
          likeCount
          isMemberLiked: like(where: { customId: { equals: $customId } }) {
            id
          }
          member {
            id
            name
            avatar
          }
        }
        source {
          id
        }
      }
      kind
    }

    booksCount: pickCount(
      where: { kind: { equals: "bookmark" }, is_active: { equals: true } }
    )
    books: pick(
      where: { kind: { equals: "bookmark" }, is_active: { equals: true } }
      orderBy: { createdAt: desc }
      take: $takes
    ) {
      story {
        id
        og_image
        source {
          title
          official_site
        }
        title
        og_title
        commentCount
        createdAt
        tag {
          id
          name
        }
        pick {
          createdAt
          member {
            id
            name
            avatar
          }
        }
        pickCount
        commentCount
        paywall
        full_screen_ad
        published_date
        comment(
          orderBy: { createdAt: desc }
          where: { member: { customId: { equals: $customId } } }
          take: 1
        ) {
          id
          content
          createdAt
          likeCount
          isMemberLiked: like(where: { customId: { equals: $customId } }) {
            id
          }
          member {
            id
            name
            avatar
          }
        }
      }
      kind
    }
  }
}

query GetVisitorProfile($customId: String, $takes: Int!) {
  member(where: { customId: $customId }) {
    # id, name, avatar use auth's context
    id
    name
    avatar
    customId
    avatar_image {
      urlOriginal
    }
    intro
    picksCount: pickCount(
      where: { kind: { equals: "read" }, is_active: { equals: true } }
    )
    followingCount
    followerCount

    picks: pick(
      where: { kind: { equals: "read" }, is_active: { equals: true } }
      orderBy: { createdAt: desc }
      take: $takes
    ) {
      story {
        id
        og_image
        source {
          title
          official_site
        }
        title
        og_title
        createdAt
        tag {
          id
          name
        }
        pick {
          createdAt
          member {
            id
            name
            avatar
          }
        }
        pickCount
        commentCount
        paywall
        full_screen_ad
        published_date
        comment(
          orderBy: { createdAt: desc }
          where: { member: { customId: { equals: $customId } } }
        ) {
          id
          content
          createdAt
          likeCount
          member {
            id
            name
            avatar
          }
        }
        source {
          id
        }
      }
      kind
    }
  }
}

query GetMemberFollowingList($customId: String, $take: Int!) {
  member(where: { customId: $customId }) {
    id
    name
    avatar
    followingCount
    follow_publisherCount(where: { source_type: { not: { equals: "empty" } } })
    following(take: $take) {
      id
      customId
      name
      avatar
    }
    follow_publisher(
      where: { source_type: { not: { equals: "empty" } } }
      take: $take
    ) {
      id
      customId
      title
      logo
      source_type
    }
  }
}

query GetMemberFollowerList($customId: String, $take: Int!) {
  member(where: { customId: $customId }) {
    id
    name
    avatar
    followingCount
    follower(take: $take) {
      id
      customId
      name
      avatar
    }
    mutualFans: follower(
      where: { following: { every: { customId: { equals: $customId } } } }
      take: $take
    ) {
      id
      customId
      name
    }
  }
}

query GetMemberProfileEditData($customId: String) {
  member(where: { customId: $customId }) {
    customId
    name
    avatar
    avatar_image {
      id
      resized {
        original
      }
    }
    intro
  }
}

query GetMemberSponsorShips($memberId: ID!, $publisherIdList: [ID!]) {
  member(where: { id: $memberId }) {
    sponsorCount
    sponsor(
      where: {
        publisher: { id: { in: $publisherIdList } }
        status: { equals: Success }
      }
    ) {
      tid
      publisher {
        id
        title
      }
    }
  }
}

query GetMemberTransactions($memberId: ID!, $take: Int) {
  member(where: { id: $memberId }) {
    sponsorCount(where: { status: { equals: Success } })
    sponsor(
      where: { status: { equals: Success } }
      take: $take
      orderBy: { createdAt: desc }
    ) {
      tid
      publisher {
        id
        title
        logo
      }
      fee
      createdAt
    }
    transaction(
      where: { status: { equals: Success } }
      take: $take
      orderBy: { createdAt: desc }
    ) {
      tid
      createdAt
      expireDate
      depositVolume
      unlockStory {
        id
        title
        source {
          id
          title
          logo
        }
      }
      policy {
        type
        charge
        unlockSingle
        publisher {
          id
          title
        }
      }
    }
  }
  transactions(
    where: {
      member: { id: { equals: $memberId } }
      status: { equals: Success }
      active: { equals: true }
      unlockStory: { id: { gte: 0 } }
    }
    orderBy: { createdAt: desc }
  ) {
    tid
    unlockStory {
      id
    }
  }
}

query GetMemberUnlockStories($memberId: ID!, $skip: Int = 0, $take: Int) {
  member(where: { id: $memberId }) {
    transaction(
      where: { status: { equals: Success }, active: { equals: true } }
      orderBy: { createdAt: desc }
      skip: $skip
      take: $take
    ) {
      tid
      expireDate
      unlockStory {
        id
        title
        og_image
        source {
          id
          title
          logo
        }
      }
    }
  }
}

query GetMemberSingleTransaction($memberId: ID!, $tid: String) {
  member(where: { id: $memberId }) {
    transaction(where: { tid: { equals: $tid }, status: { equals: Success } }) {
      tid
      createdAt
      depositVolume
      unlockStory {
        id
        title
        source {
          id
          title
        }
      }
      policy {
        type
        charge
        unlockSingle
        publisher {
          id
          title
        }
      }
    }
    sponsor(where: { tid: { equals: $tid }, status: { equals: Success } }) {
      fee
      createdAt
      publisher {
        id
        title
      }
    }
  }
}

query GetMemberPickComment($memberId: ID, $storyId: ID) {
  members(where: { id: { equals: $memberId } }) {
    pick(
      where: {
        story: { id: { equals: $storyId } }
        is_active: { equals: true }
      }
    ) {
      id
      pick_comment(where: { is_active: { equals: true } }) {
        id
        content
      }
    }
  }
}
